{{ if .Values.integration.settings.dependencies.wso2mi }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.integration.apps.wso2mi.name}}
  namespace : {{ .Release.Namespace }}
  labels:
    {{- include "wso2mi.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.integration.apps.wso2mi.replicas }}
  rollingUpdate:
    maxSurge: {{ .Values.integration.apps.wso2mi.strategy.rollingUpdate.maxSurge }}
    maxUnavailable: {{ .Values.integration.apps.wso2mi.strategy.rollingUpdate.maxUnavailable }}
  type: RollingUpdate
  selector:
  selector:
    matchLabels:
      deployment: {{ template "wso2mi.resource.prefix" . }}
      node: {{ template "wso2mi.resource.prefix" . }}
  template:
    metadata:
      {{- with .Values.integration.apps.wso2mi.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        deployment: {{ template "wso2mi.resource.prefix" . }}
        node: {{ template "wso2mi.resource.prefix" . }}
    spec:
      initContainers:
        {{ if .Values.integration.settings.dependencies.postgresql }}
        - name: init-postgresql
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of PostgreSQL Server deployment"; while ! nc -z "{{ .Values.integration.apps.postgresql.serviceName }}" 5432; do sleep 1; printf "-"; done; echo -e "  >> PostgreSQL Server has started";']
        - name: init-postgresql-connector-download
          image: busybox:1.32
          command:
            - /bin/sh
            - "-c"
            - |
              set -e
              connector_version=42.2.9
              wget https://repo1.maven.org/maven2/org/postgresql/postgresql/${connector_version}/postgresql-${connector_version}.jar -P /postgresql-connector-jar/
          volumeMounts:
            - name: postgresql-connector-jar
              mountPath: /postgresql-connector-jar
        {{ end }}
        {{ if .Values.integration.settings.dependencies.dashboard }}
        - name: init-wso2mi-dashboard
          image: busybox:1.32
          command: ['sh', '-c', 'echo -e "Checking for the availability of wso2mi-dashboard Server deployment"; while ! nc -z "{{ .Values.integration.apps.dashboard.serviceName }}" 9743; do sleep 1; printf "-"; done; echo -e "  >> wso2mi-dashboard Server has started";']
        {{ end }}
      containers:
        - name: {{ .Values.integration.apps.wso2mi.name}}
          image: "{{ .Values.integration.apps.wso2mi.image.repository }}:{{ .Values.integration.apps.wso2mi.image.tag }}"
          imagePullPolicy: {{ .Values.integration.apps.wso2mi.image.pullPolicy }}
          livenessProbe:
            exec:
              command:
                - /bin/bash
                - -c
                - nc -z localhost 8290
            initialDelaySeconds: {{ .Values.integration.apps.wso2mi.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.integration.apps.wso2mi.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /healthz
              port: 9201
            initialDelaySeconds: {{ .Values.integration.apps.wso2mi.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.integration.apps.wso2mi.readinessProbe.periodSeconds }}
          ports:
            - containerPort: 8290
              protocol: "TCP"
            - containerPort: 8253
              protocol: "TCP"
            - containerPort: 9201
              protocol: "TCP"
          env:
            {{ if .Values.integration.settings.dependencies.monitoring.enabled }}
            - name: JAVA_OPTS
              value: -DenablePrometheusApi=true
            - name: NODE_PARAMS
              value: -Dproperties.file.path=/home/wso2carbon/wso2mi-4.2.0/conf/properties/prod.properties         
            - name: instance
              value: "{{ .Values.integration.apps.wso2mi.serviceName}}.{{ .Release.Namespace }}.svc.cluster.local:9201"
            {{ end }}       
          volumeMounts:
            {{ if .Values.integration.apps.wso2mi.customDeployment }}
            - name: wso2mi-config
              mountPath: /home/wso2carbon/wso2-config-volume/conf
            {{ end }}
            {{ if .Values.integration.settings.dependencies.postgresql }}
            - name: postgresql-connector-jar
              mountPath: /home/wso2carbon/wso2-artifact-volume/lib
            {{ end }}
            - name: wso2mi-docker-entrypoint
              mountPath: /home/wso2carbon/docker-entrypoint.sh
              subPath: docker-entrypoint.sh
      volumes:
        {{ if .Values.integration.apps.wso2mi.customDeployment }}
        - name: wso2mi-config
          configMap:
            name: {{ template "wso2mi.resource.prefix" . }}-conf
            defaultMode: 420
        {{ end }}
        {{ if .Values.integration.settings.dependencies.postgresql }}
        - name: postgresql-connector-jar
          emptyDir: {}
        {{ end }}
        - name: wso2mi-docker-entrypoint
          configMap:
            name: {{ template "wso2mi.resource.prefix" . }}-conf-docker-entrypoint
            defaultMode: 263
      {{ if .Values.integration.settings.serviceAccount.enabled }}
      serviceAccountName: {{ .Values.integration.settings.serviceAccount.name }}
      {{ end }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      securityContext:
        {{- toYaml .Values.integration.apps.wso2mi.podSecurityContext | nindent 8 }}
      hostAliases:
        - ip: 172.28.213.134
          hostnames:
            - 1cz
{{ end }}